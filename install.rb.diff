diff --git a/altinstall.rb b/altinstall.rb
index 5e26f20..8640128 100644
--- a/altinstall.rb
+++ b/altinstall.rb
@@ -200,6 +200,94 @@ def shell_profile
   end
 end
 
+# Class for installing vendor portable ruby
+# Fix to install vendor portable ruby before 'brew update --force' by Z.OOL. <zool@zool.jpn.org>
+class PortableRuby
+  RUBY_VERSION = "2.3.3"
+  RUBY_MAJOR_VERSION = "2.3"
+  RUBY_SOURCE_URL = "https://cache.ruby-lang.org/pub/ruby/#{RUBY_MAJOR_VERSION}/ruby-#{RUBY_VERSION}.tar.gz"
+
+  private
+
+  def cpu_core
+    return `/usr/bin/getconf _NPROCESSORS_ONLN`.chomp.to_i
+  end
+
+  def arch
+    return (linux? ? `uname -m` : `uname -p`).chomp
+  end
+
+  def bottle_tag
+    if linux?
+      case arch
+      when "x86_64"; return "x86_64_linux"
+      when "armv7l", "armv8l", "aarch64"; return "armv7l_linux"
+      else; return nil
+      end
+    else
+      case arch
+      when "Intel"; return "leopard_64"
+      else; return nil
+      end
+    end
+  end
+
+  def vendor_prefix(prefix = ::HOMEBREW_PREFIX_DEFAULT)
+    return "#{prefix}/Homebrew/Library/Homebrew/vendor"
+  end
+
+  def bottle_url
+    return "https://homebrew.bintray.com/bottles-portable/portable-ruby-#{RUBY_VERSION}.#{bottle_tag}.bottle.1.tar.gz"
+  end
+
+  public
+
+  def install(prefix)
+    ohai "Installing vendor ruby to #{vendor_prefix(prefix)}"
+
+    if bottle_tag.nil?
+      # If linuxbrew can't use the bottle of portable ruby, vendor ruby is build from source code.
+      Dir.chdir "/tmp" do
+        system "/usr/bin/curl --output ruby-#{RUBY_VERSION}.tar.gz #{RUBY_SOURCE_URL}"
+        system "/bin/tar -zxf ruby-#{RUBY_VERSION}.tar.gz"
+      end
+
+      Dir.chdir "/tmp/ruby-#{RUBY_VERSION}" do
+        system "/bin/bash ./configure --prefix=#{vendor_prefix(prefix)}/portable-ruby/#{RUBY_VERSION}"
+        system "/usr/bin/make -j#{cpu_core}"
+        system "/usr/bin/make install"
+      end
+
+      system "/bin/rm -rf /tmp/ruby-#{RUBY_VERSION}"
+      system "/bin/rm /tmp/ruby-#{RUBY_VERSION}.tar.gz"
+    else
+      # linuxbrew use the bottle of portable ruby.
+      system "/bin/mkdir -p #{vendor_prefix(prefix)}"
+      system "/bin/bash -o pipefail -c '/usr/bin/curl -L #{bottle_url} | /bin/tar -zxf - -C #{vendor_prefix(prefix)}'"
+    end
+
+    Dir.chdir "#{vendor_prefix(prefix)}/portable-ruby" do
+      system "/bin/ln -sf #{RUBY_VERSION} current"
+    end
+
+    ohai "Installing vendor ruby successful"
+
+    ENV["PATH"] = "#{vendor_prefix(prefix)}/portable-ruby/#{RUBY_VERSION}/bin:#{ENV['PATH']}"
+    ruby_path = `/usr/bin/which ruby`.chomp
+
+    ohai "#{ruby_path}"
+    system "#{ruby_path} --version 1>&2"
+    ohai "Add Ruby to your PATH by running:"
+    ohai "PATH=#{ENV['PATH']}"
+
+    return $?.success?
+  end
+
+  def self.install(prefix)
+    return self.new.install(prefix)
+  end
+end
+
 # Invalidate sudo timestamp before exiting (if it wasn't active before).
 Kernel.system "/usr/bin/sudo -n -v 2>/dev/null"
 at_exit { Kernel.system "/usr/bin/sudo", "-k" } unless $?.success?
@@ -376,6 +464,10 @@ Dir.chdir HOMEBREW_REPOSITORY do
 
     system "ln", "-sf", "#{HOMEBREW_REPOSITORY}/bin/brew", "#{HOMEBREW_PREFIX}/bin/brew" unless HOMEBREW_REPOSITORY == HOMEBREW_PREFIX
 
+    # Install vendor portable ruby
+    # Fixed by Z.OOL. <zool@zool.jpn.org>
+    PortableRuby::install(HOMEBREW_PREFIX)
+
     system "#{HOMEBREW_PREFIX}/bin/brew", "update", "--force"
   else
     # -m to stop tar erroring out if it can't modify the mtime for root owned directories
@@ -387,6 +479,10 @@ Dir.chdir HOMEBREW_REPOSITORY do
 
     system "ln", "-sf", "#{HOMEBREW_REPOSITORY}/bin/brew", "#{HOMEBREW_PREFIX}/bin/brew" unless HOMEBREW_REPOSITORY == HOMEBREW_PREFIX
 
+    # Install vendor portable ruby
+    # Fixed by Z.OOL. <zool@zool.jpn.org>
+    PortableRuby::install(HOMEBREW_PREFIX)
+
     system "/bin/mkdir", "-p", core_tap
     Dir.chdir core_tap do
       system "/bin/bash -o pipefail -c '/usr/bin/curl -#{curl_flags} #{CORE_TAP_REPO}/tarball/master | /bin/tar xz -m --strip 1'"
